<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        I5iiTi8qgAAAAABJRU5ErkJggg==
</value>
  </data>
</root>